Output of second instance: 2024-03-04 15:49:24,895 Start MPyC runtime v0.9
2024-03-04 15:49:24,997 All 2 parties connected.
Give your input here: here's your payload:  (b'8B9KRDS7MJUT3CIE6EWOIJ1TVPYD7K7Zk0\xc5\xae\x0e^\xca\xc1c\x94\x1b[:9\xa3"\xbeRQ\x8cv\x8a\xa2\x14\x91\xb1\x82}\xdfM=\x19', b'LIMD84Q2PJGQLTTDKMXRQKIBHON8JJT58LQ1DW8DQ68V3HS7ZJRPPNW80TWF52G58B9KRDS7MJUT3CIE6EWOIJ1TVPYD7K7Zk0\xc5\xae\x0e^\xca\xc1c\x94\x1b[:9\xa3"\xbeRQ\x8cv\x8a\xa2\x14\x91\xb1\x82}\xdfM=\x19')
The given input is a secret key!
Give the other input here: here's the payload:  [<mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e433310>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e4333d0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e4332e0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e432b90>]
here's the inputs:  [[<mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e1d4460>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e1d44c0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e1d44f0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e1d4520>], [<mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e1d4490>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e1d4580>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e1d45b0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a9e1d45e0>]]

Signing process begins now...
sign started
message digested.
Begin FORS signing. 
FORS signature generated.
FORS signature generated.
Begin FORS verification. 
compute roots fors
FORS verification done.
Begin HT signing. 
Begin XMSS signing. 
Begin WOTS signing. 
WOTS+ signature generated.
XMSS signature generated
Begin XMSS verification. 
Begin WOTS verification.
WOTS+ verification done.
XMSS verification is done.
Begin XMSS signing. 
Begin WOTS signing. 
WOTS+ signature generated.
XMSS signature generated
Begin XMSS verification. 
Begin WOTS verification.
WOTS+ verification done.
XMSS verification is done.
Hypertree signature generation is taking too long.
Hypertree signature generated.
HT signature generated!
Type of ht sig:  <class 'mpyc.sectypes.ArraySecFld1(GF(2))'>
sig:  <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f0a745a1000>

Output of first instance: 2024-03-04 15:49:24,879 Start MPyC runtime v0.9
2024-03-04 15:49:24,994 All 2 parties connected.
Give your input here: here's your payload:  OR8O7MQ0JSXZW58F5MKWDHQTW6
The given input is a message!
Give the other input here: here's the payload:  [<mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f338b377910>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f3384876ad0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f3384876b90>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f3384877bb0>]
here's the inputs:  [[<mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f338461c640>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f338461cc40>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f338461c5e0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f338461c610>], [<mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f338461caf0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f338461cbb0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f338461ccd0>, <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f338461cd00>]]

Signing process begins now...
sign started
message digested.
Begin FORS signing. 
FORS signature generated.
FORS signature generated.
Begin FORS verification. 
compute roots fors
FORS verification done.
Begin HT signing. 
Begin XMSS signing. 
Begin WOTS signing. 
WOTS+ signature generated.
XMSS signature generated
Begin XMSS verification. 
Begin WOTS verification.
WOTS+ verification done.
XMSS verification is done.
Begin XMSS signing. 
Begin WOTS signing. 
WOTS+ signature generated.
XMSS signature generated
Begin XMSS verification. 
Begin WOTS verification.
WOTS+ verification done.
XMSS verification is done.
Hypertree signature generation is taking too long.
Hypertree signature generated.
HT signature generated!
Type of ht sig:  <class 'mpyc.sectypes.ArraySecFld1(GF(2))'>
sig:  <mpyc.sectypes.ArraySecFld1(GF(2)) object at 0x7f335a8ad6f0>

Benchmark is done! Check bench_res.txt for results.
